{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["columns","title","dataIndex","key","render","fee","minAge","slots","map","slot","color","getSlots","pincode","date","a","url","fetch","App","useState","setPincode","setDate","data","setData","age","setAge","check","setCheck","useEffect","json","then","r","console","info","sessions","parseInt","filter","min_age_limit","className","class","for","id","type","placeholder","value","onChange","e","target","direction","format","onClick","icon","SearchOutlined","dataSource","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0489ed59.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n// import logo from './logo.svg';\nimport { Input, Button, Table, Tag, DatePicker, Space } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\n\nconst columns = [\n  {\n    title: \"State\",\n    dataIndex: \"state_name\",\n    key: \"state_name\",\n  },\n  {\n    title: \"District\",\n    dataIndex: \"district_name\",\n    key: \"district_name\",\n  },\n  {\n    title: \"Hospital\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Vaccine\",\n    dataIndex: \"vaccine\",\n    key: \"vaccine\",\n  },\n  {\n    title: \"Price(â‚¹)\",\n    dataIndex: \"fee\",\n    key: \"fee\",\n    render: (fee) => {\n      return <>{fee === \"0\" ? \"Free\" : fee}</>;\n    },\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"min_age_limit\",\n    key: \"min_age_limit\",\n    render: (minAge) => {\n      return <>{minAge + \" and above\"}</>;\n    },\n  },\n  {\n    title: \"Slots\",\n    key: \"slots\",\n    dataIndex: \"slots\",\n    render: (slots) => (\n      <span>\n        {slots.map((slot) => {\n          // let color = tag.length > 5 ? \"geekblue\" : \"green\";\n          // if (tag === \"loser\") {\n          //   color = \"volcano\";\n          // }\n          // const tagContainerCss = {\n          //   display: 'flex',\n          //   // flexDirection: 'column'\n          // }\n          return (\n            <div>\n              <Tag color=\"geekblue\" key={slot}>\n                {slot}\n              </Tag>\n            </div>\n          );\n        })}\n      </span>\n    ),\n  },\n];\n\nasync function getSlots(pincode, date) {\n  const url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=${pincode}&date=${date}`;\n  return await fetch(url);\n}\n\nfunction App() {\n  const [pincode, setPincode] = useState();\n  const [date, setDate] = useState();\n  const [data, setData] = useState([]);\n  const [age, setAge] = useState();\n  const [check, setCheck] = useState(false);\n\n  useEffect(async () => {\n    const response = await getSlots(pincode, date);\n    response.json().then((r) => {\n      console.info(r);\n      if (\"sessions\" in r) {\n        let sessions = r.sessions;\n        debugger;\n        if (parseInt(age) > 0) {\n          sessions = sessions.filter((slot) => slot.min_age_limit <= age);\n        }\n        setData(sessions);\n      } else {\n        setData([]);\n      }\n    });\n    setCheck(false);\n  }, [check]);\n\n  function onChange(date) {\n    // debugger;\n    // console.log(date, dateString);\n    if (date) setDate(date.format(\"DD-MM-YYYY\"));\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"layout\">\n        <h1> Check Vaccine Availability</h1>\n        <div>\n          <ul class=\"wrapper\">\n            <li class=\"form-row\">\n              <label for=\"name\">Pincode</label>\n              <Input\n                id=\"pin-code\"\n                type=\"number\"\n                placeholder=\"e.g. 445001\"\n                value={pincode}\n                onChange={(e) => setPincode(e.target.value)}\n              ></Input>\n            </li>\n            <li class=\"form-row\">\n              <label for=\"townborn\">Date</label>\n              <Space direction=\"vertical\">\n                <DatePicker onChange={onChange} />\n              </Space>\n            </li>\n            <li class=\"form-row\">\n              <label for=\"townborn\">Age</label>\n              <Input\n                // id=\"pin-code\"\n                type=\"number\"\n                placeholder=\"18\"\n                value={age}\n                onChange={(e) => setAge(e.target.value)}\n              ></Input>\n            </li>\n            <li class=\"form-row\">\n              <Button\n                onClick={() => {\n                  setCheck(true);\n                }}\n                type=\"primary\"\n                icon={<SearchOutlined />}\n              >\n                Search\n              </Button>\n            </li>\n            {/* <li class=\"form-row\">\n          <label for=\"email\">Email Address</label>\n          <input type=\"email\" id=\"email\">\n        </li>\n        <li class=\"form-row\">\n          <button type=\"submit\">Submit</button>\n        </li> */}\n          </ul>\n        </div>\n        {/* <div className=\"box\">\n          <form>\n            <div>\n              <lable>Pin Code</lable>\n              <div className=\"pincode-input\">\n                <Input\n                  id=\"pin-code\"\n                  type=\"number\"\n                  placeholder=\"e.g. 445001\"\n                  value={pincode}\n                  onChange={(e) => setPincode(e.target.value)}\n                ></Input>\n              </div>\n              <lable>Date</lable>\n              <Space direction=\"vertical\">\n                <DatePicker onChange={onChange} />\n              </Space>\n            </div>\n            <Button\n              onClick={() => {\n                setCheck(true);\n              }}\n              type=\"primary\"\n              icon={<SearchOutlined />}\n            >\n              Search\n            </Button>\n          </form>\n        </div> */}\n        <div>\n          <Table dataSource={data} columns={columns} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}